// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/nahue/setlist_manager/internal/app/shared/types"

func CreateBandPage(user *types.User) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = BaseLayout(PageData{
			Title:       "Crear Banda",
			Description: "Crea una nueva banda e invita miembros",
			Content:     CreateBandContent(),
			User:        user,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func CreateBandContent() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"max-w-2xl mx-auto\"><div class=\"mb-8\"><h1 class=\"text-3xl font-bold text-gray-900\">Crear Nueva Banda</h1><p class=\"mt-2 text-sm text-gray-600\">Inicia una nueva banda e invita miembros para colaborar en setlists.</p></div><form id=\"create-band-form\"><div class=\"space-y-12\"><div class=\"border-b border-gray-900/10 pb-12\"><h2 class=\"text-base/7 font-semibold text-gray-900\">Detalles de la Banda</h2><p class=\"mt-1 text-sm/6 text-gray-600\">Esta información será visible para todos los miembros de la banda.</p><div class=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\"><div class=\"col-span-full\"><label for=\"band-name\" class=\"block text-sm/6 font-medium text-gray-900\">Nombre de la Banda *</label><div class=\"mt-2\"><input type=\"text\" id=\"band-name\" name=\"name\" required class=\"block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" placeholder=\"Ingresa el nombre de la banda\"></div></div><div class=\"col-span-full\"><label for=\"band-description\" class=\"block text-sm/6 font-medium text-gray-900\">Descripción</label><div class=\"mt-2\"><textarea id=\"band-description\" name=\"description\" rows=\"3\" class=\"block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" placeholder=\"Describe tu banda o el tipo de música que tocan\"></textarea></div><p class=\"mt-3 text-sm/6 text-gray-600\">Una breve descripción de la banda y el tipo de música que tocan.</p></div></div></div></div><div class=\"mt-6 flex items-center justify-end gap-x-6\"><a href=\"/bands\" class=\"text-sm/6 font-semibold text-gray-900\">Cancelar</a> <button type=\"submit\" class=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Crear Banda</button></div></form></div><script>\n\t\tdocument.getElementById('create-band-form').addEventListener('submit', function(e) {\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\tconst formData = new FormData(e.target);\n\t\t\tconst data = {\n\t\t\t\tname: formData.get('name'),\n\t\t\t\tdescription: formData.get('description')\n\t\t\t};\n\n\t\t\tfetch('/api/bands', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tif (data.success) {\n\t\t\t\t\talert('¡Banda creada exitosamente!');\n\t\t\t\t\twindow.location.href = '/bands';\n\t\t\t\t} else {\n\t\t\t\t\talert('Error al crear la banda: ' + (data.message || 'Error desconocido'));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error creating band:', error);\n\t\t\t\talert('Error al crear la banda');\n\t\t\t});\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
