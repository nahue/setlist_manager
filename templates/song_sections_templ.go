// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/nahue/setlist_manager/internal/store"
)

func SongSections(sections []*store.SongSection, songID string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"song-sections\" class=\"mt-8\" data-song-id=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(songID)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 9, Col: 59}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"><div class=\"bg-white dark:bg-gray-800 shadow rounded-lg dark:shadow-none\"><div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\"><h2 class=\"text-lg font-medium text-gray-900 dark:text-white\">Song Sections</h2><p class=\"text-sm text-gray-500 dark:text-gray-400\">Organize your song into sections with lyrics, chords, or notes</p></div><div class=\"p-6\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(sections) == 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"text-center py-8\"><svg class=\"mx-auto h-12 w-12 text-gray-400 dark:text-gray-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path></svg><p class=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">No sections yet</p><p class=\"text-xs text-gray-400 dark:text-gray-500\">Add your first section to get started</p></div><!-- AI Generation and Add Section --> <div class=\"pt-6 border-t border-gray-200 dark:border-gray-700\"><div class=\"flex justify-between items-center mb-4\"><h3 class=\"text-sm font-medium text-gray-900 dark:text-white\">Add New Section</h3><form method=\"POST\" action=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 templ.SafeURL
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinURLErrs("/api/songs/" + songID + "/sections/generate-ai")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 32, Col: 65}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\" id=\"ai-generate-form\"><button type=\"submit\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-xs font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\" id=\"ai-generate-btn\"><span id=\"ai-generate-icon\" class=\"-ml-1 mr-2 h-4 w-4\"><svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"></path></svg></span> <span id=\"ai-generate-text\">Generate with AI</span></button></form></div><!-- Manual Add Section Form --><form method=\"POST\" action=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 templ.SafeURL
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinURLErrs("/api/songs/" + songID + "/sections")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 53, Col: 52}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\" class=\"space-y-4\" id=\"manual-add-form\"><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Title *</label><div class=\"mt-2\"><input type=\"text\" name=\"title\" required class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\" placeholder=\"e.g., Verse 1, Chorus, Bridge\"></div></div><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Key</label><div class=\"mt-2\"><select name=\"key\" class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\"><option value=\"\">No key</option> <option value=\"C\">C</option> <option value=\"C#\">C#</option> <option value=\"D\">D</option> <option value=\"D#\">D#</option> <option value=\"E\">E</option> <option value=\"F\">F</option> <option value=\"F#\">F#</option> <option value=\"G\">G</option> <option value=\"G#\">G#</option> <option value=\"A\">A</option> <option value=\"A#\">A#</option> <option value=\"B\">B</option> <option value=\"Cm\">Cm</option> <option value=\"C#m\">C#m</option> <option value=\"Dm\">Dm</option> <option value=\"D#m\">D#m</option> <option value=\"Em\">Em</option> <option value=\"Fm\">Fm</option> <option value=\"F#m\">F#m</option> <option value=\"Gm\">Gm</option> <option value=\"G#m\">G#m</option> <option value=\"Am\">Am</option> <option value=\"A#m\">A#m</option> <option value=\"Bm\">Bm</option></select></div></div><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Content</label><div class=\"mt-2\"><textarea name=\"body\" rows=\"4\" class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\" placeholder=\"Enter lyrics, chords, notes, or any content for this section...\"></textarea></div><p class=\"mt-3 text-sm/6 text-gray-600 dark:text-gray-400\">Markdown is supported for formatting.</p></div><div class=\"mt-6 flex items-center justify-end gap-x-6\"><button type=\"submit\" class=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 dark:focus-visible:outline-offset-gray-800\">Add Section</button></div></form></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"space-y-4\" id=\"sections-container\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, section := range sections {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors\" data-section-id=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(section.ID)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 134, Col: 36}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\"><div class=\"flex justify-between items-start\"><div class=\"flex-1\"><div class=\"flex items-center space-x-2\"><span class=\"cursor-move text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-400\"><svg class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 8h16M4 16h16\"></path></svg></span><h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var6 string
				templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(section.Title)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 144, Col: 88}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</h3>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if section.Key != "" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 dark:bg-indigo-900 text-indigo-800 dark:text-indigo-200\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var7 string
					templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(section.Key)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 147, Col: 26}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if section.Body != "" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<div class=\"mt-2 text-sm text-gray-600 dark:text-gray-300 prose prose-sm max-w-none dark:prose-invert\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templ.Raw(section.Body).Render(ctx, templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</div>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<div class=\"mt-2 flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-400\"><span>Position: ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var8 string
				templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", section.Position))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 157, Col: 64}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if section.User != nil {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<span>Added by ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var9 string
					templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(section.User.Email)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 159, Col: 47}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</div></div><div class=\"flex space-x-2\"><button onclick=\"editSection('{ section.ID }')\" class=\"text-indigo-600 hover:text-indigo-500 dark:text-indigo-400 dark:hover:text-indigo-300 text-sm font-medium\">Edit</button><form method=\"delete\" action=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var10 templ.SafeURL
				templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinURLErrs("/api/songs/" + songID + "/sections/" + section.ID)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 167, Col: 91}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "\" class=\"inline\"><button type=\"submit\" class=\"text-red-600 hover:text-red-500 dark:text-red-400 dark:hover:text-red-300 text-sm font-medium\">Delete</button></form></div></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "</div><!-- Add Section Form --> <div class=\"mt-6 pt-6 border-t border-gray-200 dark:border-gray-700\"><h3 class=\"text-sm font-medium text-gray-900 dark:text-white mb-4\">Add New Section</h3><form method=\"POST\" action=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 templ.SafeURL
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinURLErrs("/api/songs/" + songID + "/sections")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 183, Col: 52}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "\" id=\"manual-add-form-2\"><div class=\"space-y-4\"><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Title *</label><div class=\"mt-2\"><input type=\"text\" name=\"title\" required class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\" placeholder=\"e.g., Verse 1, Chorus, Bridge\"></div></div><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Key</label><div class=\"mt-2\"><select name=\"key\" class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\"><option value=\"\">No key</option> <option value=\"C\">C</option> <option value=\"C#\">C#</option> <option value=\"D\">D</option> <option value=\"D#\">D#</option> <option value=\"E\">E</option> <option value=\"F\">F</option> <option value=\"F#\">F#</option> <option value=\"G\">G</option> <option value=\"G#\">G#</option> <option value=\"A\">A</option> <option value=\"A#\">A#</option> <option value=\"B\">B</option> <option value=\"Cm\">Cm</option> <option value=\"C#m\">C#m</option> <option value=\"Dm\">Dm</option> <option value=\"D#m\">D#m</option> <option value=\"Em\">Em</option> <option value=\"Fm\">Fm</option> <option value=\"F#m\">F#m</option> <option value=\"Gm\">Gm</option> <option value=\"G#m\">G#m</option> <option value=\"Am\">Am</option> <option value=\"A#m\">A#m</option> <option value=\"Bm\">Bm</option></select></div></div><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Content</label><div class=\"mt-2\"><textarea name=\"body\" rows=\"4\" class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\" placeholder=\"Enter lyrics, chords, notes, or any content for this section...\"></textarea></div><p class=\"mt-3 text-sm/6 text-gray-600 dark:text-gray-400\">Markdown is supported for formatting.</p></div></div><div class=\"mt-6 flex items-center justify-end gap-x-6\"><button type=\"submit\" class=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 dark:focus-visible:outline-offset-gray-800\">Add Section</button></div></form></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "</div></div></div><script>\n\t\t// Tab functionality\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t// Initialize tabs\n\t\t\tinitializeTabs();\n\t\t\t\n\t\t\t// Initialize markdown preview\n\t\t\tinitializeMarkdownPreview();\n\t\t\t\n\t\t\t// Initialize form handlers\n\t\t\tinitializeAIGeneration();\n\t\t\tinitializeManualForms();\n\t\t});\n\n\t\tfunction handleAISuccess(event) {\n\t\t\t// Reset loading state\n\t\t\tconst songSections = document.getElementById('song-sections');\n\t\t\tif (songSections && songSections._x_dataStack && songSections._x_dataStack[0]) {\n\t\t\t\tsongSections._x_dataStack[0].isGenerating = false;\n\t\t\t}\n\t\t\t\n\t\t\t// Wait a bit for the DOM to update, then reinitialize the components\n\t\t\tsetTimeout(() => {\n\t\t\t\tconsole.log('Reinitializing components after AI generation...');\n\t\t\t\t\n\t\t\t\t// Initialize tabs and markdown preview for any new content\n\t\t\t\tinitializeTabs();\n\t\t\t\tinitializeMarkdownPreview();\n\t\t\t\t\n\t\t\t\tconsole.log('Components reinitialized');\n\t\t\t}, 100);\n\t\t\t\n\t\t\t// Show success notification\n\t\t\tshowNotification('Song sections generated successfully!', 'success');\n\t\t}\n\n\t\tfunction handleAIError(event) {\n\t\t\t// Reset loading state\n\t\t\tconst songSections = document.getElementById('song-sections');\n\t\t\tif (songSections && songSections._x_dataStack && songSections._x_dataStack[0]) {\n\t\t\t\tsongSections._x_dataStack[0].isGenerating = false;\n\t\t\t}\n\t\t\t\n\t\t\tconsole.error('Error generating sections:', event.detail);\n\t\t\tshowNotification('Failed to generate sections. Please try again.', 'error');\n\t\t}\n\n\t\tfunction showNotification(message, type) {\n\t\t\t// Create notification element\n\t\t\tconst notification = document.createElement('div');\n\t\t\tnotification.className = `fixed top-4 right-4 z-50 p-4 rounded-md shadow-lg ${\n\t\t\t\ttype === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'\n\t\t\t}`;\n\t\t\tnotification.textContent = message;\n\t\t\t\n\t\t\t// Add to page\n\t\t\tdocument.body.appendChild(notification);\n\t\t\t\n\t\t\t// Remove after 3 seconds\n\t\t\tsetTimeout(() => {\n\t\t\t\tnotification.remove();\n\t\t\t}, 3000);\n\t\t}\n\n\t\tfunction initializeTabs() {\n\t\t\tdocument.querySelectorAll('.tab-button').forEach(button => {\n\t\t\t\tbutton.addEventListener('click', function() {\n\t\t\t\t\tconst tabName = this.getAttribute('data-tab');\n\t\t\t\t\tconst tabContainer = this.closest('.mt-1');\n\t\t\t\t\t\n\t\t\t\t\t// Update button states\n\t\t\t\t\ttabContainer.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\t\t\t\tbtn.classList.remove('border-indigo-500', 'text-indigo-600', 'dark:text-indigo-400');\n\t\t\t\t\t\tbtn.classList.add('border-transparent', 'text-gray-500', 'dark:text-gray-400');\n\t\t\t\t\t});\n\t\t\t\t\tthis.classList.remove('border-transparent', 'text-gray-500', 'dark:text-gray-400');\n\t\t\t\t\tthis.classList.add('border-indigo-500', 'text-indigo-600', 'dark:text-indigo-400');\n\t\t\t\t\t\n\t\t\t\t\t// Update tab content visibility\n\t\t\t\t\ttabContainer.querySelectorAll('.tab-content').forEach(content => {\n\t\t\t\t\t\tif (content.getAttribute('data-tab') === tabName) {\n\t\t\t\t\t\t\tcontent.classList.remove('hidden');\n\t\t\t\t\t\t\tcontent.classList.add('active');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontent.classList.add('hidden');\n\t\t\t\t\t\t\tcontent.classList.remove('active');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// Update preview if switching to preview tab\n\t\t\t\t\tif (tabName === 'preview') {\n\t\t\t\t\t\tupdateMarkdownPreview(tabContainer);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction initializeMarkdownPreview() {\n\t\t\tdocument.querySelectorAll('.markdown-editor').forEach(textarea => {\n\t\t\t\ttextarea.addEventListener('input', function() {\n\t\t\t\t\tconst tabContainer = this.closest('.mt-1');\n\t\t\t\t\tconst previewTab = tabContainer.querySelector('[data-tab=\"preview\"]');\n\t\t\t\t\tif (previewTab && !previewTab.classList.contains('hidden')) {\n\t\t\t\t\t\tupdateMarkdownPreview(tabContainer);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction updateMarkdownPreview(tabContainer) {\n\t\t\tconst textarea = tabContainer.querySelector('.markdown-editor');\n\t\t\tconst preview = tabContainer.querySelector('.markdown-preview');\n\t\t\t\n\t\t\tif (textarea && preview) {\n\t\t\t\tconst markdownText = textarea.value;\n\t\t\t\tif (markdownText.trim() === '') {\n\t\t\t\t\tpreview.innerHTML = '<div class=\"text-gray-500 dark:text-gray-400 italic\">Preview will appear here...</div>';\n\t\t\t\t} else {\n\t\t\t\t\t// Use marked library for proper markdown parsing\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Configure marked options\n\t\t\t\t\t\tmarked.setOptions({\n\t\t\t\t\t\t\tbreaks: true, // Convert line breaks to <br>\n\t\t\t\t\t\t\tgfm: true,    // GitHub Flavored Markdown\n\t\t\t\t\t\t\theaderIds: false, // Disable header IDs for security\n\t\t\t\t\t\t\tmangle: false,    // Disable mangling\n\t\t\t\t\t\t\tsanitize: false   // We'll handle sanitization with DOMPurify if needed\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Parse markdown to HTML\n\t\t\t\t\t\tconst html = marked.parse(markdownText);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Apply custom styling classes\n\t\t\t\t\t\tlet styledHtml = html\n\t\t\t\t\t\t\t// Add Tailwind classes to headers\n\t\t\t\t\t\t\t.replace(/<h1>/g, '<h1 class=\"text-2xl font-bold mt-4 mb-3 text-gray-900 dark:text-white\">')\n\t\t\t\t\t\t\t.replace(/<h2>/g, '<h2 class=\"text-xl font-semibold mt-3 mb-2 text-gray-900 dark:text-white\">')\n\t\t\t\t\t\t\t.replace(/<h3>/g, '<h3 class=\"text-lg font-semibold mt-2 mb-1 text-gray-900 dark:text-white\">')\n\t\t\t\t\t\t\t// Add Tailwind classes to links\n\t\t\t\t\t\t\t.replace(/<a /g, '<a class=\"text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300 underline\" target=\"_blank\" ')\n\t\t\t\t\t\t\t// Add Tailwind classes to lists\n\t\t\t\t\t\t\t.replace(/<ul>/g, '<ul class=\"list-disc ml-4 mb-2 text-gray-900 dark:text-white\">')\n\t\t\t\t\t\t\t.replace(/<ol>/g, '<ol class=\"list-decimal ml-4 mb-2 text-gray-900 dark:text-white\">')\n\t\t\t\t\t\t\t// Add Tailwind classes to code blocks\n\t\t\t\t\t\t\t.replace(/<code>/g, '<code class=\"bg-gray-100 dark:bg-gray-600 px-1 py-0.5 rounded text-sm font-mono text-gray-900 dark:text-white\">')\n\t\t\t\t\t\t\t.replace(/<pre>/g, '<pre class=\"bg-gray-100 dark:bg-gray-600 p-3 rounded text-sm font-mono overflow-x-auto text-gray-900 dark:text-white\">')\n\t\t\t\t\t\t\t// Add Tailwind classes to blockquotes\n\t\t\t\t\t\t\t.replace(/<blockquote>/g, '<blockquote class=\"border-l-4 border-gray-300 dark:border-gray-600 pl-4 italic text-gray-900 dark:text-white\">');\n\t\t\t\t\t\t\n\t\t\t\t\t\tpreview.innerHTML = styledHtml;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error parsing markdown:', error);\n\t\t\t\t\t\tpreview.innerHTML = '<div class=\"text-red-500 dark:text-red-400\">Error parsing markdown</div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction editSection(sectionId) {\n\t\t\t// TODO: Implement edit functionality\n\t\t\talert('Edit functionality coming soon!');\n\t\t}\n\n\t\tfunction initializeAIGeneration() {\n\t\t\tconst form = document.getElementById('ai-generate-form');\n\t\t\tif (form) {\n\t\t\t\tform.addEventListener('submit', function(e) {\n\t\t\t\t\te.preventDefault(); // Prevent default form submission\n\t\t\t\t\t\n\t\t\t\t\t// Show loading state immediately\n\t\t\t\t\tshowAILoadingState();\n\t\t\t\t\t\n\t\t\t\t\t// Get form data\n\t\t\t\t\tconst formData = new FormData(form);\n\t\t\t\t\t\n\t\t\t\t\t// Make AJAX request\n\t\t\t\t\tfetch(form.action, {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tbody: formData\n\t\t\t\t\t})\n\t\t\t\t\t.then(response => response.text())\n\t\t\t\t\t.then(html => {\n\t\t\t\t\t\t// Update the song-sections container with the new HTML\n\t\t\t\t\t\tdocument.getElementById('song-sections').innerHTML = html;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Reinitialize components\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tinitializeTabs();\n\t\t\t\t\t\t\tinitializeMarkdownPreview();\n\t\t\t\t\t\t\tinitializeAIGeneration(); // Reinitialize for the new form\n\t\t\t\t\t\t\tinitializeManualForms(); // Reinitialize manual forms\n\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Show success notification\n\t\t\t\t\t\tshowNotification('Song sections generated successfully!', 'success');\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.error('Error generating sections:', error);\n\t\t\t\t\t\tshowNotification('Failed to generate sections. Please try again.', 'error');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Reset loading state on error\n\t\t\t\t\t\tresetAILoadingState();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction initializeManualForms() {\n\t\t\t// Handle both manual add forms\n\t\t\tconst forms = ['manual-add-form', 'manual-add-form-2'];\n\t\t\t\n\t\t\tforms.forEach(formId => {\n\t\t\t\tconst form = document.getElementById(formId);\n\t\t\t\tif (form) {\n\t\t\t\t\tform.addEventListener('submit', function(e) {\n\t\t\t\t\t\te.preventDefault(); // Prevent default form submission\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Get form data\n\t\t\t\t\t\tconst formData = new FormData(form);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Make AJAX request\n\t\t\t\t\t\tfetch(form.action, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\tbody: formData\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(response => response.text())\n\t\t\t\t\t\t.then(html => {\n\t\t\t\t\t\t\t// Update the song-sections container with the new HTML\n\t\t\t\t\t\t\tdocument.getElementById('song-sections').innerHTML = html;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Reinitialize components\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tinitializeTabs();\n\t\t\t\t\t\t\t\tinitializeMarkdownPreview();\n\t\t\t\t\t\t\t\tinitializeAIGeneration(); // Reinitialize AI form\n\t\t\t\t\t\t\t\tinitializeManualForms(); // Reinitialize manual forms\n\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Show success notification\n\t\t\t\t\t\t\tshowNotification('Section added successfully!', 'success');\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.error('Error adding section:', error);\n\t\t\t\t\t\t\tshowNotification('Failed to add section. Please try again.', 'error');\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction showAILoadingState() {\n\t\t\tconst btn = document.getElementById('ai-generate-btn');\n\t\t\tconst icon = document.getElementById('ai-generate-icon');\n\t\t\tconst text = document.getElementById('ai-generate-text');\n\t\t\t\n\t\t\tif (btn && icon && text) {\n\t\t\t\tbtn.disabled = true;\n\t\t\t\ticon.innerHTML = `\n\t\t\t\t\t<svg class=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n\t\t\t\t\t\t<path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t`;\n\t\t\t\ttext.textContent = 'Generating...';\n\t\t\t}\n\t\t}\n\n\t\tfunction resetAILoadingState() {\n\t\t\tconst btn = document.getElementById('ai-generate-btn');\n\t\t\tconst icon = document.getElementById('ai-generate-icon');\n\t\t\tconst text = document.getElementById('ai-generate-text');\n\t\t\t\n\t\t\tif (btn && icon && text) {\n\t\t\t\tbtn.disabled = false;\n\t\t\t\ticon.innerHTML = `\n\t\t\t\t\t<svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t`;\n\t\t\t\ttext.textContent = 'Generate with AI';\n\t\t\t}\n\t\t}\n\n\t\tfunction handleSort(item, position) {\n\t\t\t// Get all section elements and their IDs in current order\n\t\t\tconst sectionElements = document.querySelectorAll('[data-section-id]');\n\t\t\tconst sectionOrder = Array.from(sectionElements).map(el => el.getAttribute('data-section-id'));\n\t\t\t\n\t\t\t// Get song ID from data attribute\n\t\t\tconst songSections = document.getElementById('song-sections');\n\t\t\tconst songId = songSections.getAttribute('data-song-id');\n\t\t\t\n\t\t\t// Send to server\n\t\t\tfetch(`/api/songs/${songId}/sections/reorder`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ section_order: sectionOrder })\n\t\t\t})\n\t\t\t.then(response => response.text())\n\t\t\t.then(html => {\n\t\t\t\tdocument.getElementById('song-sections').innerHTML = html;\n\t\t\t\t// Reinitialize tabs, markdown preview, and markdown content after content update\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tinitializeTabs();\n\t\t\t\t\tinitializeMarkdownPreview();\n\t\t\t\t\tinitializeMarkdownContent();\n\t\t\t\t}, 100);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error reordering sections:', error);\n\t\t\t\talert('Error reordering sections');\n\t\t\t});\n\t\t}\n\n\t\tfunction onSortStart() {\n\t\t\t// Ensure dark mode classes are applied to sortable elements\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst isDarkMode = document.documentElement.classList.contains('dark');\n\t\t\t\tif (isDarkMode) {\n\t\t\t\t\tdocument.querySelectorAll('.sortable-ghost, .sortable-chosen').forEach(el => {\n\t\t\t\t\t\tel.classList.add('dark');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 10);\n\t\t}\n\n\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func SongSectionsError(errorMsg string, songID string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var12 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var12 == nil {
			templ_7745c5c3_Var12 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "<div id=\"song-sections\" class=\"mt-8\"><div class=\"bg-white dark:bg-gray-800 shadow rounded-lg dark:shadow-none\"><div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\"><h2 class=\"text-lg font-medium text-gray-900 dark:text-white\">Song Sections</h2><p class=\"text-sm text-gray-500 dark:text-gray-400\">Organize your song into sections with lyrics, chords, or notes</p></div><div class=\"p-6\"><!-- Error Message --><div class=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-6\"><div class=\"flex items-center\"><svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\"></path></svg> <span class=\"text-red-700 dark:text-red-400\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var13 string
		templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(errorMsg)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 608, Col: 61}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "</span></div></div><!-- Add Section Form --><div class=\"pt-6 border-t border-gray-200 dark:border-gray-700\"><h3 class=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">Add New Section</h3><form method=\"POST\" action=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var14 templ.SafeURL
		templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinURLErrs("/api/songs/" + songID + "/sections")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/song_sections.templ`, Line: 617, Col: 51}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "\" class=\"space-y-3\"><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Title *</label><div class=\"mt-2\"><input type=\"text\" name=\"title\" required class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\" placeholder=\"e.g., Verse 1, Chorus, Bridge\"></div></div><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Key</label><div class=\"mt-2\"><select name=\"key\" class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\"><option value=\"\">No key</option> <option value=\"C\">C</option> <option value=\"C#\">C#</option> <option value=\"D\">D</option> <option value=\"D#\">D#</option> <option value=\"E\">E</option> <option value=\"F\">F</option> <option value=\"F#\">F#</option> <option value=\"G\">G</option> <option value=\"G#\">G#</option> <option value=\"A\">A</option> <option value=\"A#\">A#</option> <option value=\"B\">B</option> <option value=\"Cm\">Cm</option> <option value=\"C#m\">C#m</option> <option value=\"Dm\">Dm</option> <option value=\"D#m\">D#m</option> <option value=\"Em\">Em</option> <option value=\"Fm\">Fm</option> <option value=\"F#m\">F#m</option> <option value=\"Gm\">Gm</option> <option value=\"G#m\">G#m</option> <option value=\"Am\">Am</option> <option value=\"A#m\">A#m</option> <option value=\"Bm\">Bm</option></select></div></div><div><label class=\"block text-sm/6 font-medium text-gray-900 dark:text-white\">Content</label><div class=\"mt-2\"><textarea name=\"body\" rows=\"4\" class=\"block w-full rounded-md bg-white dark:bg-gray-700 px-3 py-1.5 text-base text-gray-900 dark:text-white outline-1 -outline-offset-1 outline-gray-300 dark:outline-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 dark:focus:outline-indigo-500 sm:text-sm/6\" placeholder=\"Enter lyrics, chords, notes, or any content for this section...\"></textarea></div><p class=\"mt-3 text-sm/6 text-gray-600 dark:text-gray-400\">Markdown is supported for formatting.</p></div><div class=\"mt-6 flex items-center justify-end gap-x-6\"><button type=\"submit\" class=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 dark:focus-visible:outline-offset-gray-800\">Add Section</button></div></form></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
