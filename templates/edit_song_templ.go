// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/nahue/setlist_manager/internal/app/shared/types"
	"github.com/nahue/setlist_manager/internal/store"
)

func EditSongPage(song *store.Song, band *types.Band, user *types.User) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = BaseLayout(PageData{
			Title:       "Editar " + song.Title + " - " + band.Name,
			Description: "Editar información de la canción",
			Content:     EditSongContent(song, band),
			User:        user,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func EditSongContent(song *store.Song, band *types.Band) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"max-w-2xl mx-auto\"><!-- Header --><div class=\"mb-8\"><div class=\"flex justify-between items-start\"><div><div class=\"flex items-center space-x-3\"><a href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 templ.SafeURL
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinURLErrs("/song?id=" + song.ID)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 25, Col: 37}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\" class=\"text-indigo-600 hover:text-indigo-500\"><svg class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path></svg></a><h1 class=\"text-3xl font-bold text-gray-900\">Editar Canción</h1></div><p class=\"mt-2 text-lg text-gray-600\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(song.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 32, Col: 55}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</p><p class=\"mt-1 text-sm text-gray-500\">Banda: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(band.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 33, Col: 61}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</p></div></div></div><!-- Edit Form --><form method=\"POST\" action=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 templ.SafeURL
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinURLErrs("/api/bands/songs/" + song.ID)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 39, Col: 60}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\"><div class=\"space-y-12\"><div class=\"border-b border-gray-900/10 pb-12\"><h2 class=\"text-base/7 font-semibold text-gray-900\">Información de la Canción</h2><p class=\"mt-1 text-sm/6 text-gray-600\">Actualiza los detalles de la canción.</p><div class=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\"><div class=\"col-span-full\"><label for=\"title\" class=\"block text-sm/6 font-medium text-gray-900\">Título *</label><div class=\"mt-2\"><input type=\"text\" name=\"title\" id=\"title\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(song.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 49, Col: 69}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\" required class=\"block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"></div></div><div class=\"col-span-full\"><label for=\"artist\" class=\"block text-sm/6 font-medium text-gray-900\">Artista</label><div class=\"mt-2\"><input type=\"text\" name=\"artist\" id=\"artist\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(song.Artist)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 57, Col: 72}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\" class=\"block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" placeholder=\"Nombre del artista o banda\"></div></div><div class=\"sm:col-span-3\"><label for=\"key\" class=\"block text-sm/6 font-medium text-gray-900\">Tonalidad</label><div class=\"mt-2\"><input type=\"text\" name=\"key\" id=\"key\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 string
		templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(song.Key)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 66, Col: 63}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\" class=\"block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" placeholder=\"ej: C, Am, F#m\"></div></div><div class=\"sm:col-span-3\"><label for=\"tempo\" class=\"block text-sm/6 font-medium text-gray-900\">Tempo (BPM)</label><div class=\"mt-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if song.Tempo != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<input type=\"number\" name=\"tempo\" id=\"tempo\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", *song.Tempo))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 77, Col: 48}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\" class=\"block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" placeholder=\"120\" min=\"1\" max=\"300\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<input type=\"number\" name=\"tempo\" id=\"tempo\" class=\"block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" placeholder=\"120\" min=\"1\" max=\"300\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</div></div><div class=\"col-span-full\"><label for=\"notes\" class=\"block text-sm/6 font-medium text-gray-900\">Notas</label><div class=\"mt-2\"><textarea name=\"notes\" id=\"notes\" rows=\"4\" class=\"block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" placeholder=\"Notas adicionales sobre la canción...\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var11 string
		templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(song.Notes)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 93, Col: 74}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</textarea></div><p class=\"mt-3 text-sm/6 text-gray-600\">Información adicional sobre la canción, acordes, letra, etc.</p></div><div class=\"col-span-full\"><label for=\"content\" class=\"block text-sm/6 font-medium text-gray-900\">Contenido de la Canción</label><div class=\"mt-2\"><div class=\"mt-1\"><div class=\"flex space-x-1 border-b border-gray-300\"><button type=\"button\" class=\"tab-button border-b-2 border-indigo-500 text-indigo-600 px-3 py-2 text-sm font-medium\" data-tab=\"edit\">Editar</button> <button type=\"button\" class=\"tab-button border-b-2 border-transparent text-gray-500 hover:text-gray-700 px-3 py-2 text-sm font-medium\" data-tab=\"preview\">Vista Previa</button></div><div class=\"tab-content active\" data-tab=\"edit\"><textarea name=\"content\" id=\"content\" rows=\"12\" class=\"markdown-editor block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" placeholder=\"Escribe aquí el contenido de la canción usando Markdown...&#10;&#10;Ejemplos:&#10;# Título&#10;## Sección&#10;**Negrita** o *cursiva*&#10;- Lista&#10;1. Lista numerada\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var12 string
		templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(song.Content)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 114, Col: 211}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</textarea></div><div class=\"tab-content hidden\" data-tab=\"preview\"><div class=\"markdown-preview block w-full rounded-md bg-gray-50 px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 sm:text-sm/6 min-h-[200px]\"><div class=\"text-gray-500 italic\">Vista previa aparecerá aquí...</div></div></div></div></div><p class=\"mt-3 text-sm/6 text-gray-600\">Letras, acordes, notas y cualquier información relevante para la práctica. Soporta Markdown para formato.</p></div></div></div></div><div class=\"mt-6 flex items-center justify-end gap-x-6\"><a href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var13 templ.SafeURL
		templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinURLErrs("/song?id=" + song.ID)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/edit_song.templ`, Line: 131, Col: 35}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "\" class=\"text-sm/6 font-semibold text-gray-900\">Cancelar</a> <button type=\"submit\" class=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Guardar Cambios</button></div></form></div><script>\n\t\t// Tab functionality\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t// Initialize tabs\n\t\t\tinitializeTabs();\n\t\t\t\n\t\t\t// Initialize markdown preview\n\t\t\tinitializeMarkdownPreview();\n\t\t});\n\n\t\tfunction initializeTabs() {\n\t\t\tdocument.querySelectorAll('.tab-button').forEach(button => {\n\t\t\t\tbutton.addEventListener('click', function() {\n\t\t\t\t\tconst tabName = this.getAttribute('data-tab');\n\t\t\t\t\tconst tabContainer = this.closest('.mt-1');\n\t\t\t\t\t\n\t\t\t\t\t// Update button states\n\t\t\t\t\ttabContainer.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\t\t\t\tbtn.classList.remove('border-indigo-500', 'text-indigo-600');\n\t\t\t\t\t\tbtn.classList.add('border-transparent', 'text-gray-500');\n\t\t\t\t\t});\n\t\t\t\t\tthis.classList.remove('border-transparent', 'text-gray-500');\n\t\t\t\t\tthis.classList.add('border-indigo-500', 'text-indigo-600');\n\t\t\t\t\t\n\t\t\t\t\t// Update tab content visibility\n\t\t\t\t\ttabContainer.querySelectorAll('.tab-content').forEach(content => {\n\t\t\t\t\t\tif (content.getAttribute('data-tab') === tabName) {\n\t\t\t\t\t\t\tcontent.classList.remove('hidden');\n\t\t\t\t\t\t\tcontent.classList.add('active');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontent.classList.add('hidden');\n\t\t\t\t\t\t\tcontent.classList.remove('active');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// Update preview if switching to preview tab\n\t\t\t\t\tif (tabName === 'preview') {\n\t\t\t\t\t\tupdateMarkdownPreview(tabContainer);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction initializeMarkdownPreview() {\n\t\t\tdocument.querySelectorAll('.markdown-editor').forEach(textarea => {\n\t\t\t\ttextarea.addEventListener('input', function() {\n\t\t\t\t\tconst tabContainer = this.closest('.mt-1');\n\t\t\t\t\tconst previewTab = tabContainer.querySelector('[data-tab=\"preview\"]');\n\t\t\t\t\tif (previewTab && !previewTab.classList.contains('hidden')) {\n\t\t\t\t\t\tupdateMarkdownPreview(tabContainer);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction updateMarkdownPreview(tabContainer) {\n\t\t\tconst textarea = tabContainer.querySelector('.markdown-editor');\n\t\t\tconst preview = tabContainer.querySelector('.markdown-preview');\n\t\t\t\n\t\t\tif (textarea && preview) {\n\t\t\t\tconst markdownText = textarea.value;\n\t\t\t\tif (markdownText.trim() === '') {\n\t\t\t\t\tpreview.innerHTML = '<div class=\"text-gray-500 italic\">Vista previa aparecerá aquí...</div>';\n\t\t\t\t} else {\n\t\t\t\t\t// Use marked library for proper markdown parsing\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Configure marked options\n\t\t\t\t\t\tmarked.setOptions({\n\t\t\t\t\t\t\tbreaks: true, // Convert line breaks to <br>\n\t\t\t\t\t\t\tgfm: true,    // GitHub Flavored Markdown\n\t\t\t\t\t\t\theaderIds: false, // Disable header IDs for security\n\t\t\t\t\t\t\tmangle: false,    // Disable mangling\n\t\t\t\t\t\t\tsanitize: false   // We'll handle sanitization with DOMPurify if needed\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Parse markdown to HTML\n\t\t\t\t\t\tconst html = marked.parse(markdownText);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Apply custom styling classes\n\t\t\t\t\t\tlet styledHtml = html\n\t\t\t\t\t\t\t// Add Tailwind classes to headers\n\t\t\t\t\t\t\t.replace(/<h1>/g, '<h1 class=\"text-2xl font-bold mt-4 mb-3 text-gray-900\">')\n\t\t\t\t\t\t\t.replace(/<h2>/g, '<h2 class=\"text-xl font-semibold mt-3 mb-2 text-gray-900\">')\n\t\t\t\t\t\t\t.replace(/<h3>/g, '<h3 class=\"text-lg font-semibold mt-2 mb-1 text-gray-900\">')\n\t\t\t\t\t\t\t// Add Tailwind classes to links\n\t\t\t\t\t\t\t.replace(/<a /g, '<a class=\"text-indigo-600 hover:text-indigo-800 underline\" target=\"_blank\" ')\n\t\t\t\t\t\t\t// Add Tailwind classes to lists\n\t\t\t\t\t\t\t.replace(/<ul>/g, '<ul class=\"list-disc ml-4 mb-2 text-gray-900\">')\n\t\t\t\t\t\t\t.replace(/<ol>/g, '<ol class=\"list-decimal ml-4 mb-2 text-gray-900\">')\n\t\t\t\t\t\t\t// Add Tailwind classes to code blocks\n\t\t\t\t\t\t\t.replace(/<code>/g, '<code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm font-mono text-gray-900\">')\n\t\t\t\t\t\t\t.replace(/<pre>/g, '<pre class=\"bg-gray-100 p-3 rounded text-sm font-mono overflow-x-auto text-gray-900\">')\n\t\t\t\t\t\t\t// Add Tailwind classes to blockquotes\n\t\t\t\t\t\t\t.replace(/<blockquote>/g, '<blockquote class=\"border-l-4 border-gray-300 pl-4 italic text-gray-900\">');\n\t\t\t\t\t\t\n\t\t\t\t\t\tpreview.innerHTML = styledHtml;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error parsing markdown:', error);\n\t\t\t\t\t\tpreview.innerHTML = '<div class=\"text-red-500\">Error parsing markdown</div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
