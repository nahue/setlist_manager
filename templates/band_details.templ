package templates

import (
	"github.com/nahue/setlist_manager/internal/app/shared/types"
	"github.com/nahue/setlist_manager/internal/store"
)

templ BandDetailsPage(band *types.Band, members []*types.BandMember, songs []*store.Song, userRole string) {
	@BaseLayout(PageData{
		Title:       band.Name + " - Band Details",
		Description: "View band information and manage songs",
		Content:     BandDetailsContent(band, members, songs, userRole),
	})
}

templ BandDetailsContent(band *types.Band, members []*types.BandMember, songs []*store.Song, userRole string) {
	<div
		class="max-w-7xl mx-auto"
		x-data="{ 
		showAddSongModal: false,
		newSong: { title: '', artist: '', key: '', tempo: '', notes: '' },
		bandId: new URLSearchParams(window.location.search).get('id'),
		handleSongSuccess($event) {
			// Alpine AJAX automatically replaced the songs section
			// Just close the modal and reset the form
			this.showAddSongModal = false;
			this.newSong = { title: '', artist: '', key: '', tempo: '', notes: '' };
		},
		handleSongError($event) {
			console.error('Error adding song:', $event.detail);
			alert('Error adding song');
		},
		prepareJsonData($event) {
			// Convert form data to JSON
			const formData = new FormData($event.target);
			const jsonData = {
				title: formData.get('title') || '',
				artist: formData.get('artist') || '',
				key: formData.get('key') || '',
				tempo: formData.get('tempo') ? parseInt(formData.get('tempo')) : null,
				notes: formData.get('notes') || ''
			};
			
			// Override the request options
			$event.detail.body = JSON.stringify(jsonData);
			$event.detail.headers = {
				'Content-Type': 'application/json'
			};
			
			console.log('Sending JSON data:', jsonData);
		},
		handleReorderSuccess($event) {
			// Alpine AJAX automatically replaced the songs section
			console.log('Songs reordered successfully');
		},
		handleReorderError($event) {
			console.error('Error reordering songs:', $event.detail);
			alert('Error reordering songs');
		},
		handleSort(item, position) {
			// Get all song elements and their IDs in current order
			const songElements = document.querySelectorAll('[data-song-id]');
			const songOrder = Array.from(songElements).map(el => el.getAttribute('data-song-id'));
			
			// Send to server
			fetch(`/api/bands/songs/reorder?id=${new URLSearchParams(window.location.search).get('id')}`, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({ song_order: songOrder })
			})
			.then(response => response.text())
			.then(html => {
				document.getElementById('songs-section').innerHTML = html;
			})
			.catch(error => {
				console.error('Error reordering songs:', error);
				alert('Error reordering songs');
			});
		}
	}"
	>
		<!-- Band Content -->
		<div>
			<!-- Header -->
			<div class="mb-8">
				<div class="flex justify-between items-start">
					<div>
						<h1 class="text-3xl font-bold text-gray-900">{ band.Name }</h1>
						<p class="mt-2 text-gray-600">{ band.Description }</p>
						<p class="mt-1 text-sm text-gray-500">Created { band.CreatedAt.Format("January 2, 2006") }</p>
					</div>
					<div class="flex space-x-3">
						<button @click="showAddSongModal = true" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
							<svg class="-ml-1 mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
							</svg>
							Add Song
						</button>
					</div>
				</div>
			</div>
			<div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
				<!-- Songs Section -->
				<div class="lg:col-span-2">
					@SongsSection(songs)
				</div>
				<!-- Members Section -->
				<div class="lg:col-span-1">
					@MembersSection(members, band.ID)
				</div>
			</div>
		</div>
		<!-- Add Song Modal -->
		<div x-show="showAddSongModal" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-200" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
			<div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
				<div class="mt-3">
					<h3 class="text-lg font-medium text-gray-900 mb-4">Add New Song</h3>
					<form x-target="songs-section" method="POST" :action="`/api/bands/songs?id=${bandId}`" @ajax:success="handleSongSuccess" @ajax:error="handleSongError">
						<div class="space-y-4">
							<div>
								<label class="block text-sm font-medium text-gray-700">Title *</label>
								<input type="text" x-model="newSong.title" name="title" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"/>
							</div>
							<div>
								<label class="block text-sm font-medium text-gray-700">Artist</label>
								<input type="text" x-model="newSong.artist" name="artist" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"/>
							</div>
							<div class="grid grid-cols-2 gap-4">
								<div>
									<label class="block text-sm font-medium text-gray-700">Key</label>
									<input type="text" x-model="newSong.key" name="key" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"/>
								</div>
								<div>
									<label class="block text-sm font-medium text-gray-700">Tempo (BPM)</label>
									<input type="number" x-model="newSong.tempo" name="tempo" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"/>
								</div>
							</div>
							<div>
								<label class="block text-sm font-medium text-gray-700">Notes</label>
								<textarea x-model="newSong.notes" name="notes" rows="3" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"></textarea>
							</div>
						</div>
						<div class="mt-6 flex justify-end space-x-3">
							<button type="button" @click="showAddSongModal = false" class="px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
								Cancel
							</button>
							<button type="submit" class="px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">
								Add Song
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
	<script>
		function deleteSong(songId) {
			if (!confirm('Are you sure you want to delete this song?')) {
				return;
			}

			fetch(`/api/bands/songs/${songId}`, {
				method: 'DELETE'
			})
			.then(response => response.text())
			.then(html => {
				// Replace the songs section with the new HTML
				document.getElementById('songs-section').innerHTML = html;
			})
			.catch(error => {
				console.error('Error deleting song:', error);
				alert('Error deleting song');
			});
		}

		function editSong(songId) {
			// TODO: Implement edit functionality
			alert('Edit functionality coming soon!');
		}
	</script>
}

templ SongsSection(songs []*store.Song) {
	<div id="songs-section">
		<div class="bg-white shadow rounded-lg">
			<div class="px-6 py-4 border-b border-gray-200">
				<h2 class="text-lg font-medium text-gray-900">Songs</h2>
				<p class="text-sm text-gray-500">Manage your band's song repertoire</p>
			</div>
			<div class="p-6">
				if len(songs) == 0 {
					<div class="text-center py-8">
						<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"></path>
						</svg>
						<p class="mt-2 text-sm text-gray-500">No songs yet</p>
						<p class="text-xs text-gray-400">Add your first song to get started</p>
					</div>
				} else {
					<div
						class="space-y-4"
						x-sort="handleSort"
						x-sort:config="{ 
							animation: 150,
							ghostClass: 'sortable-ghost',
							chosenClass: 'sortable-chosen'
						}"
					>
						for _, song := range songs {
							<div
								class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors [body:not(.sorting)_&]:hover:bg-gray-50"
								data-song-id={ song.ID }
								x-sort:item={ song.ID }
							>
								<div class="flex justify-between items-start">
									<div class="flex-1">
										<div class="flex items-center space-x-2">
											<span x-sort:handle class="cursor-move text-gray-400 hover:text-gray-600">
												<svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8h16M4 16h16"></path>
												</svg>
											</span>
											<h3 class="text-lg font-medium text-gray-900">{ song.Title }</h3>
										</div>
										<p class="text-sm text-gray-600">{ song.Artist }</p>
										<div class="mt-2 flex items-center space-x-4 text-xs text-gray-500">
											<span>Key: { song.Key }</span>
											<span>Added by { song.User.Email }</span>
										</div>
										<p class="mt-2 text-sm text-gray-600">{ song.Notes }</p>
									</div>
									<div class="flex space-x-2">
										<button @click="editSong('{ song.ID }')" class="text-indigo-600 hover:text-indigo-500 text-sm font-medium">
											Edit
										</button>
										<form method="delete" action={ "/api/bands/songs/" + song.ID } x-target="songs-section" @ajax:before="confirm('Are you sure you want to delete this song?') || $event.preventDefault()">
											<button type="submit" class="text-red-600 hover:text-red-500 text-sm font-medium">
												Delete
											</button>
										</form>
									</div>
								</div>
							</div>
						}
					</div>
				}
			</div>
		</div>
	</div>
}

templ MembersSection(members []*types.BandMember, bandID string) {
	<div id="members-section" class="bg-white shadow rounded-lg">
		<div class="px-6 py-4 border-b border-gray-200">
			<h2 class="text-lg font-medium text-gray-900">Members</h2>
			<p class="text-sm text-gray-500">Band members and their roles</p>
		</div>
		<div class="p-6">
			<div class="space-y-3">
				for _, member := range members {
					<div class="flex items-center justify-between">
						<div class="flex items-center">
							<div class="h-8 w-8 rounded-full bg-indigo-100 flex items-center justify-center">
								<svg class="h-4 w-4 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
								</svg>
							</div>
							<div class="ml-3">
								<p class="text-sm font-medium text-gray-900">{ member.User.Email }</p>
								<p class="text-xs text-gray-500 capitalize">{ member.Role }</p>
							</div>
						</div>
						if member.Role != "owner" {
							<div class="flex items-center space-x-2">
								<form
									method="DELETE"
									action={ "/api/bands/members/remove?id=" + bandID + "&user_id=" + member.UserID }
									x-target="members-section"
									@ajax:before="confirm('Are you sure you want to remove this member?') || $event.preventDefault()"
								>
									<button
										type="submit"
										class="text-red-600 hover:text-red-500 text-sm font-medium"
									>
										Remove
									</button>
								</form>
							</div>
						}
					</div>
				}
			</div>
			<!-- Add Member Form -->
			<div class="mt-6 pt-6 border-t border-gray-200">
				<h3 class="text-sm font-medium text-gray-900 mb-3">Add New Member</h3>
				<form
					method="POST"
					action={ "/api/bands/invite?id=" + bandID }
					x-target="members-section"
					class="space-y-3"
				>
					<div>
						<label class="block text-xs font-medium text-gray-700">Email *</label>
						<input
							type="email"
							name="email"
							required
							class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-xs"
							placeholder="Enter email address"
						/>
					</div>
					<div>
						<label class="block text-xs font-medium text-gray-700">Name (optional)</label>
						<input
							type="text"
							name="name"
							class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-xs"
							placeholder="Enter display name"
						/>
					</div>
					<div>
						<label class="block text-xs font-medium text-gray-700">Role</label>
						<select
							name="role"
							class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-xs"
						>
							<option value="member">Member</option>
							<option value="admin">Admin</option>
						</select>
					</div>
					<button
						type="submit"
						class="w-full inline-flex justify-center items-center px-3 py-2 border border-transparent text-xs font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
					>
						Add Member
					</button>
				</form>
			</div>
		</div>
	</div>
}

templ MembersSectionError(errorMsg string, bandID string) {
	<div id="members-section" class="bg-white shadow rounded-lg">
		<div class="px-6 py-4 border-b border-gray-200">
			<h2 class="text-lg font-medium text-gray-900">Members</h2>
			<p class="text-sm text-gray-500">Band members and their roles</p>
		</div>
		<div class="p-6">
			<!-- Error Message -->
			<div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
				<div class="flex items-center">
					<svg class="w-5 h-5 text-red-400 mr-2" fill="currentColor" viewBox="0 0 20 20">
						<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
					</svg>
					<span class="text-red-700">{ errorMsg }</span>
				</div>
			</div>
			
			<!-- Add Member Form -->
			<div class="pt-6 border-t border-gray-200">
				<h3 class="text-sm font-medium text-gray-900 mb-3">Add New Member</h3>
				<form
					method="POST"
					action={ "/api/bands/invite?id=" + bandID }
					x-target="members-section"
					class="space-y-3"
				>
					<div>
						<label class="block text-xs font-medium text-gray-700">Email *</label>
						<input
							type="email"
							name="email"
							required
							class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-xs"
							placeholder="Enter email address"
						/>
					</div>
					<div>
						<label class="block text-xs font-medium text-gray-700">Name (optional)</label>
						<input
							type="text"
							name="name"
							class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-xs"
							placeholder="Enter display name"
						/>
					</div>
					<div>
						<label class="block text-xs font-medium text-gray-700">Role</label>
						<select
							name="role"
							class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-xs"
						>
							<option value="member">Member</option>
							<option value="admin">Admin</option>
						</select>
					</div>
					<button
						type="submit"
						class="w-full inline-flex justify-center items-center px-3 py-2 border border-transparent text-xs font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
					>
						Add Member
					</button>
				</form>
			</div>
		</div>
	</div>
}
